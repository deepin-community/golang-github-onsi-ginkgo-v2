From: Reinhard Tartler <siretart@tauware.de>
Date: Mon, 7 Oct 2024 06:30:33 -0400
Subject: Allow disabling color with flag GINGKO_COLOR

When integrating golang packages using ginkgo, such as CI/CD
systems or Linux distributions, there are situations where the
test output is tracked in text files and presented without ANSI
color decoding.  For those situations, in particular when the tests
are invoked directly by `go test`,  and thus without the `gingko`
CLI driver, controller color output via an environment variable
can be much more convenient

Signed-off-by: Reinhard Tartler <siretart@gmail.com>
Forwarded: https://github.com/onsi/ginkgo/pull/1464
---
 core_dsl.go     |  9 +++++++++
 types/config.go | 10 ++++++++++
 2 files changed, 19 insertions(+)

diff --git a/core_dsl.go b/core_dsl.go
index 2d7a70e..263b46a 100644
--- a/core_dsl.go
+++ b/core_dsl.go
@@ -20,6 +20,7 @@ import (
 	"io"
 	"os"
 	"path/filepath"
+	"strconv"
 	"strings"
 
 	"github.com/go-logr/logr"
@@ -257,6 +258,14 @@ func RunSpecs(t GinkgoTestingT, description string, args ...interface{}) bool {
 	suiteLabels := extractSuiteConfiguration(args)
 
 	var reporter reporters.Reporter
+	reporterConfig := reporterConfig
+	if value, present := os.LookupEnv("GINGKO_COLOR"); present {
+		b, err := strconv.ParseBool(value)
+		if err == nil {
+			reporterConfig.NoColor = !b
+		}
+	}
+
 	if suiteConfig.ParallelTotal == 1 {
 		reporter = reporters.NewDefaultReporter(reporterConfig, formatter.ColorableStdOut)
 		outputInterceptor = internal.NoopOutputInterceptor{}
diff --git a/types/config.go b/types/config.go
index c88fc85..33eb205 100644
--- a/types/config.go
+++ b/types/config.go
@@ -112,6 +112,16 @@ func (rc ReporterConfig) WillGenerateReport() bool {
 
 func NewDefaultReporterConfig() ReporterConfig {
 	return ReporterConfig{}
+	c := ReporterConfig{}
+
+	if value, present := os.LookupEnv("GINGKO_COLOR"); present {
+		b, err := strconv.ParseBool(value)
+		if err == nil {
+			c.NoColor = !b
+		}
+	}
+
+	return c
 }
 
 // Configuration for the Ginkgo CLI
